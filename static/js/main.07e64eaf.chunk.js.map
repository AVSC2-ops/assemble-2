{"version":3,"sources":["components/Topics.jsx","components/Messages.jsx","actions/index.js","actions/types.js","components/SendMessage.jsx","components/Header.jsx","components/Dashboard.jsx","components/App.js","components/socketMiddleware.js","reducers/chatReducer.jsx","reducers/index.js","index.js"],"names":["Topics","props","topics","changeActiveTopic","react_default","a","createElement","className","List","map","topic","ListItem","onClick","e","target","innerText","key","button","Messages","messageContainer","activeTopic","chatStore","useSelector","state","chat","console","log","useEffect","scrollIntoView","message","i","Chip","avatar","Icon","label","from","msg","ref","element","sendMessage","type","payload","SendMessage","dispatch","useDispatch","chatMessage","changeChatMessage","user","handleSubmit","class","TextField","autoComplete","color","id","value","onChange","onKeyPress","handleKeyPress","Button","variant","Header","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","Typography","Math","ceil","random","Dashboard","Object","keys","_React$useState","React","useState","_React$useState2","slicedToArray","_React$useState3","_React$useState4","theme","createMuiTheme","palette","primary","main","App","baseUrl","ThemeProvider","initialState","general","react","sports","business","politics","combineReducers","arguments","length","undefined","action","objectSpread","defineProperty","concat","toConsumableArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","storeAPI","socket","io","on","next","emit","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.07e64eaf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nexport default function Topics(props) {\r\n  const { topics, changeActiveTopic } = props;\r\n  return (\r\n    <div className=\"topics-grid\">\r\n      <div className=\"topics-container\">\r\n        <List>\r\n          {topics.map(topic => (\r\n            <ListItem onClick={(e) => changeActiveTopic(e.target.innerText)} key={topic} button>{topic}</ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Chip, Icon } from '@material-ui/core';\r\n\r\nexport default function Messages(props) {\r\n\r\n  const { activeTopic } = props;\r\n\r\n  const chatStore = useSelector(state => state.chat);\r\n  console.log(activeTopic);\r\n\r\n  let messageContainer;\r\n\r\n  useEffect(() => {\r\n    // Keep scroll on bottom\r\n    messageContainer.scrollIntoView();\r\n  })\r\n\r\n  return (\r\n    <div className=\"messages-grid\">\r\n      <div className=\"messages-container\">\r\n        {chatStore[activeTopic].map((message, i) => (\r\n          <div className=\"message\" key={i}>\r\n            <Chip avatar={<Icon>person</Icon>} label={message.from + ' ' + message.msg} />\r\n          </div>\r\n        ))}\r\n        <div ref={(element) => messageContainer = element}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { SEND_MESSAGE, UPDATE_CHAT } from './types';\r\n\r\nexport const sendMessage = (message) => ({\r\n  type: SEND_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateChat = (message) => ({\r\n  type: UPDATE_CHAT,\r\n  payload: message\r\n});","export const UPDATE_CHAT = 'UPDATE_CHAT';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';","import React from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from '../actions';\r\n\r\nexport default function SendMessage(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatMessage, changeChatMessage, activeTopic, user } = props;\r\n\r\n  function handleSubmit(message) {\r\n    dispatch(sendMessage(message));\r\n    changeChatMessage('');\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\")\r\n      handleSubmit({ topic: activeTopic, from: user, msg: chatMessage });\r\n  }\r\n\r\n  return (\r\n    <div className=\"send-messages-grid\">\r\n      <div class=\"send-message-container\">\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          color=\"blue\"\r\n          id=\"filled-name\"\r\n          className=\"message-input\"\r\n          label=\"Type a message...\"\r\n          value={chatMessage}\r\n          onChange={(e) => changeChatMessage(e.target.value)}\r\n          onKeyPress={(e) => handleKeyPress(e)}\r\n        />\r\n        <Button color=\"primary\" variant=\"contained\" className=\"message-button\" onClick={() => handleSubmit({ topic: activeTopic, from: user, msg: chatMessage })}>Send</Button>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport default function Header(props) {\r\n  const { activeTopic } = props;\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"navbar\">\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\">\r\n          {activeTopic}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Topics from './Topics';\r\nimport Messages from './Messages';\r\nimport SendMessage from './SendMessage.jsx';\r\nimport Header from './Header';\r\n\r\nconst user = 'eric' + Math.ceil(Math.random() * 100);\r\n\r\nexport default function Dashboard() {\r\n\r\n  const chatStore = useSelector(state => state.chat);\r\n  const topics = Object.keys(chatStore);\r\n\r\n  // Local state\r\n  const [chatMessage, changeChatMessage] = React.useState('');\r\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n\r\n  return (\r\n    <div>\r\n      <Header activeTopic={activeTopic} />\r\n      <div className=\"grid-container\">\r\n        <Topics topics={topics} changeActiveTopic={changeActiveTopic} />\r\n        <Messages activeTopic={activeTopic} />\r\n        <SendMessage chatMessage={chatMessage} changeChatMessage={changeChatMessage} user={user} activeTopic={activeTopic} />\r\n      </div >\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    }\n  }\n});\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import io from 'socket.io-client';\r\n\r\nimport { SEND_MESSAGE, UPDATE_CHAT } from '../actions/types';\r\n\r\nexport const socketMiddleware = (baseUrl) => {\r\n  return storeAPI => {\r\n    let socket = io(baseUrl);\r\n\r\n    // Dispatch chat to reducers when we receive data\r\n    socket.on(\"simple-chat\", (message) => {\r\n      storeAPI.dispatch({\r\n        type: UPDATE_CHAT,\r\n        payload: message\r\n      });\r\n    });\r\n\r\n    // Emit when SEND_MESSAGE action\r\n    return next => action => {\r\n      if (action.type === SEND_MESSAGE) {\r\n        socket.emit('simple-chat', action.payload);\r\n        return;\r\n      }\r\n\r\n      return next(action);\r\n    }\r\n  }\r\n}","const initialState = {\r\n  general: [\r\n  ],\r\n  react: [\r\n  ],\r\n  sports: [\r\n  ],\r\n  business: [\r\n  ],\r\n  politics: [\r\n  ],\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_CHAT':\r\n      return {\r\n        ...state,\r\n        [action.payload.topic]: [\r\n          ...state[action.payload.topic], { from: action.payload.from, msg: action.payload.msg }\r\n        ]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { chatReducer } from './chatReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  chat: chatReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { socketMiddleware } from './components/socketMiddleware';\n\nimport reducers from './reducers'\n\n\nconst baseUrl = (process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://simple-chat-apix.herokuapp.com/');\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk, socketMiddleware(baseUrl))));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}