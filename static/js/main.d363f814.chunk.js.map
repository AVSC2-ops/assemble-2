{"version":3,"sources":["actions/index.js","actions/types.js","components/Sidebar.jsx","components/Messages.jsx","components/SendMessage.jsx","components/Header.jsx","components/Dashboard.jsx","components/App.js","components/socketMiddleware.js","reducers/chatReducer.jsx","reducers/index.js","index.js"],"names":["sendMessage","message","type","payload","changeServer","server","changeTopic","Topics","props","topics","servers","dispatch","useDispatch","react_default","a","createElement","className","List","map","Tooltip","title","key","placement","IconButton","GroupWork_default","onClick","topic","ListItem","e","button","style","verticalAlign","fontWeight","class","Typography","variant","Messages","messageContainer","_useSelector","useSelector","state","chat","activeServer","activeTopic","chatStore","useEffect","scrollIntoView","i","ListItemAvatar","Avatar","Person_default","ListItemText","primary","from","secondary","msg","ref","element","SendMessage","chatMessage","changeChatMessage","user","handleKeyPress","Fragment","TextField","autoComplete","color","id","label","concat","value","onChange","target","onKeyPress","Header","_useState","useState","_useState2","Object","slicedToArray","drawerVisible","changeDrawerVisible","AppBar","position","Toolbar","edge","aria-label","Menu_default","SwipeableDrawer","anchor","open","onClose","Math","ceil","random","Dashboard","keys","theme","createMuiTheme","overrides","MuiTooltip","tooltip","fontSize","backgroundColor","palette","main","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","App","baseUrl","ThemeProvider","initialState","programming haven","general","react","vue","php","node","game land","HOTS","Overwatch","Diablo","PoE","CSGO","combineReducers","arguments","length","undefined","action","_action$payload","console","log","objectSpread","defineProperty","toConsumableArray","location","serverReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","storeAPI","socket","io","on","next","emit","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d363f814.chunk.js","sourcesContent":["import { SEND_MESSAGE, UPDATE_CHAT, CHANGE_SERVER, CHANGE_TOPIC } from './types';\r\n\r\nexport const sendMessage = (message) => ({\r\n  type: SEND_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateChat = (message) => ({\r\n  type: UPDATE_CHAT,\r\n  payload: message\r\n});\r\n\r\nexport const changeServer = (server) => ({\r\n  type: CHANGE_SERVER,\r\n  payload: server\r\n});\r\n\r\nexport const changeTopic = (server) => ({\r\n  type: CHANGE_TOPIC,\r\n  payload: server\r\n});","export const UPDATE_CHAT = 'UPDATE_CHAT';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const CHANGE_SERVER = 'CHANGE_SERVER';\r\nexport const CHANGE_TOPIC = 'CHANGE_TOPIC';","import React from 'react'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport GroupWork from '@material-ui/icons/GroupWork';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeServer, changeTopic } from '../actions';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\n\r\nexport default function Topics(props) {\r\n\r\n  const { topics, servers } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"servers-container\">\r\n        <List>\r\n          {servers.map(server => (\r\n            <Tooltip title={server} key={server} placement=\"right\" className=\"server-tooltip\">\r\n              <IconButton className=\"server-icon\">\r\n                <GroupWork onClick={() => dispatch(changeServer(server))} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <div className=\"topics-container\">\r\n        <List className=\"topic\">\r\n          {topics.map(topic => (\r\n            <ListItem onClick={(e) => dispatch(changeTopic(topic))} key={topic} button>\r\n              <i style={{ verticalAlign: 'text-bottom', fontWeight: 'bold' }} class=\"topic-hashtag\">#</i>\r\n              <Typography variant=\"body1\">{topic}</Typography>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Chip, Icon, List, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport default function Messages(props) {\r\n\r\n  // Get store\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n\r\n  const chatStore = useSelector(state => state.chat);\r\n\r\n  let messageContainer;\r\n\r\n  useEffect(() => {\r\n    // Keep scroll on bottom\r\n    messageContainer.scrollIntoView()\r\n  })\r\n\r\n  return (\r\n    <div className=\"messages-container\">\r\n      <List>\r\n        {chatStore.servers[activeServer][activeTopic].map((message, i) => (\r\n          <ListItem className=\"message\" key={i}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={message.from} secondary={message.msg} className=\"message-text\" />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <div ref={(element) => messageContainer = element}></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from '../actions';\r\n\r\nexport default function SendMessage(props) {\r\n\r\n  // Get store\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatMessage, changeChatMessage, user } = props;\r\n\r\n  function handleSubmit(message) {\r\n    dispatch(sendMessage(message));\r\n    changeChatMessage('');\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\")\r\n      handleSubmit({ server: activeServer, topic: activeTopic, from: user, msg: chatMessage });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"send-message-border\" />\r\n      <div className=\"send-message-container\">\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          color=\"blue\"\r\n          id=\"filled-name\"\r\n          className=\"message-input\"\r\n          label={`Message # ${activeTopic}`}\r\n          value={chatMessage}\r\n          onChange={(e) => changeChatMessage(e.target.value)}\r\n          onKeyPress={(e) => handleKeyPress(e)}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { SwipeableDrawer } from '@material-ui/core';\r\nimport Sidebar from './Sidebar';\r\n\r\nexport default function Header(props) {\r\n\r\n  // Get store\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n\r\n  // Local state\r\n  const [drawerVisible, changeDrawerVisible] = useState(false);\r\n\r\n  const { topics, servers } = props;\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"navbar\">\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"menu-burger-button\">\r\n          <MenuIcon onClick={() => changeDrawerVisible(true)} />\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={drawerVisible}\r\n          onClose={() => changeDrawerVisible(false)}\r\n        >\r\n          <Sidebar topics={topics} servers={servers} />\r\n        </SwipeableDrawer>\r\n        <Typography variant=\"h6\">\r\n          {activeServer} - {activeTopic}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport Messages from './Messages';\r\nimport SendMessage from './SendMessage.jsx';\r\nimport Header from './Header';\r\n\r\nconst user = 'eric' + Math.ceil(Math.random() * 100);\r\n\r\nexport default function Dashboard() {\r\n\r\n  const chatStore = useSelector(state => state.chat);\r\n\r\n  // Local state\r\n  const [chatMessage, changeChatMessage] = useState('');\r\n\r\n  const servers = Object.keys(chatStore.servers);\r\n\r\n  const topics = Object.keys(chatStore.servers[chatStore.activeServer]);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Header topics={topics} servers={servers} />\r\n\r\n      <div className=\"grid-container\">\r\n\r\n        <div className=\"sidebar-grid\">\r\n          <Sidebar topics={topics} servers={servers} />\r\n        </div>\r\n\r\n        <div className=\"messages-grid\">\r\n          <Messages topics={topics} />\r\n        </div>\r\n\r\n        <div className=\"send-messages-grid\">\r\n          <SendMessage chatMessage={chatMessage} changeChatMessage={changeChatMessage} user={user} />\r\n        </div>\r\n\r\n      </div >\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: \"16px\",\n        backgroundColor: 'black'\n      }\n    }\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  }\n});\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import io from 'socket.io-client';\r\n\r\nimport { SEND_MESSAGE, UPDATE_CHAT } from '../actions/types';\r\n\r\nexport const socketMiddleware = (baseUrl) => {\r\n  return storeAPI => {\r\n    let socket = io(baseUrl);\r\n\r\n    // Dispatch chat to reducers when we receive data\r\n    socket.on(\"simple-chat\", (message) => {\r\n      storeAPI.dispatch({\r\n        type: UPDATE_CHAT,\r\n        payload: message\r\n      });\r\n    });\r\n\r\n    // Emit when SEND_MESSAGE action\r\n    return next => action => {\r\n      if (action.type === SEND_MESSAGE) {\r\n        socket.emit('simple-chat', action.payload);\r\n        return;\r\n      }\r\n\r\n      return next(action);\r\n    }\r\n  }\r\n}","const initialState = {\r\n  servers: {\r\n    \"programming haven\": {\r\n      general: [\r\n      ],\r\n      react: [\r\n      ],\r\n      vue: [\r\n      ],\r\n      php: [\r\n      ],\r\n      node: [\r\n      ],\r\n    },\r\n    \"game land\": {\r\n      HOTS: [\r\n      ],\r\n      Overwatch: [\r\n      ],\r\n      Diablo: [\r\n      ],\r\n      PoE: [\r\n      ],\r\n      CSGO: [\r\n      ],\r\n    },\r\n  },\r\n  activeServer: '',\r\n  activeTopic: '',\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_CHAT':\r\n      const { server, topic, from, msg } = action.payload;\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        servers: {\r\n          ...state.servers,\r\n          [server]: {\r\n            ...state.servers[server],\r\n            [topic]: [\r\n              ...state.servers[server][topic], { from: from, msg: msg }\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    case 'CHANGE_SERVER':\r\n      return { ...state, activeServer: action.payload, activeTopic: Object.keys(state.servers[action.payload])[0] }\r\n    case 'CHANGE_TOPIC':\r\n      return { ...state, activeTopic: action.payload }\r\n    default:\r\n      return { ...state, activeServer: Object.keys(state.servers)[0], activeTopic: Object.keys(state.servers[Object.keys(state.servers)[0]])[0] };\r\n  }\r\n}\r\n","import { chatReducer } from './chatReducer';\r\nimport { serverReducer } from './serverReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  chat: chatReducer,\r\n  location: serverReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { socketMiddleware } from './components/socketMiddleware';\n\nimport reducers from './reducers'\n\n\nconst baseUrl = (process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://simple-chat-apix.herokuapp.com/');\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk, socketMiddleware(baseUrl))));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}