{"version":3,"sources":["components/Store.js","components/Topics.jsx","components/Messages.jsx","components/SendMessage.jsx","components/Header.jsx","components/Dashboard.jsx","components/App.js","index.js"],"names":["socket","baseUrl","CTX","React","createContext","initialState","general","react","sports","business","politics","chatReducer","state","action","_action$payload","payload","topic","from","msg","type","Object","objectSpread","defineProperty","concat","toConsumableArray","sendChatAction","message","emit","Store","props","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","chats","chatDispatch","io","on","react_default","a","createElement","Provider","value","children","Topics","topics","changeActiveTopic","className","List","map","ListItem","onClick","e","target","innerText","key","button","Messages","activeTopic","i","Chip","avatar","Icon","label","SendMessage","chatMessage","changeChatMessage","user","TextField","id","onChange","Button","color","variant","Header","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","Typography","Dashboard","_React$useContext","useContext","keys","_React$useState","useState","_React$useState2","_React$useState3","_React$useState4","Math","ceil","random","Fragment","Container","Paper","App","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.43787c58.chunk.js","sourcesContent":["import React from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://simple-chat-apix.herokuapp.com/');\r\n\r\nexport const CTX = React.createContext();\r\n\r\nconst initialState = {\r\n  general: [\r\n  ],\r\n  react: [\r\n  ],\r\n  sports: [\r\n  ],\r\n  business: [\r\n  ],\r\n  politics: [\r\n  ],\r\n}\r\n\r\nfunction chatReducer(state, action) {\r\n  const { topic, from, msg } = action.payload;\r\n  switch (action.type) {\r\n    case 'UPDATE_CHATS':\r\n      return {\r\n        ...state,\r\n        [topic]: [\r\n          ...state[topic], { from: from, msg: msg }\r\n        ]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet socket;\r\n\r\nfunction sendChatAction(message) {\r\n  socket.emit('simple-chat', message);\r\n}\r\n\r\nexport default function Store(props) {\r\n\r\n  const [chats, chatDispatch] = React.useReducer(chatReducer, initialState);\r\n\r\n  if (!socket) {\r\n    socket = io(baseUrl);\r\n    socket.on('simple-chat', (msg) => {\r\n      const action = { type: 'UPDATE_CHATS', payload: msg }\r\n      chatDispatch(action);\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <CTX.Provider value={{ chats, sendChatAction }}>\r\n      {props.children}\r\n    </ CTX.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nexport default function Topics(props) {\r\n  const { topics, changeActiveTopic } = props;\r\n  return (\r\n    <div className=\"topics-container\">\r\n      <List>\r\n        {topics.map(topic => (\r\n          <ListItem onClick={(e) => changeActiveTopic(e.target.innerText)} key={topic} button>{topic}</ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Chip, Icon } from '@material-ui/core';\r\n\r\nexport default function Messages(props) {\r\n\r\n  const { chats, activeTopic } = props;\r\n\r\n  return (\r\n    <div className=\"messages-container\">\r\n      {chats[activeTopic].map((message, i) => (\r\n        <div className=\"messages\" key={i}>\r\n          <Chip avatar={<Icon>person</Icon>} label={message.from + ' ' + message.msg} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function SendMessage(props) {\r\n  const { chatMessage, changeChatMessage, activeTopic, user, sendChatAction } = props;\r\n  return (\r\n    <div className=\"send-message-container\">\r\n      <TextField\r\n        id=\"filled-name\"\r\n        className=\"message-box\"\r\n        label=\"Type a message...\"\r\n        value={chatMessage}\r\n        onChange={(e) => changeChatMessage(e.target.value)}\r\n      />\r\n      <Button color=\"primary\" variant=\"contained\" className=\"message-button\" onClick={() => { sendChatAction({ topic: activeTopic, from: user, msg: chatMessage }); changeChatMessage(''); }}>Send</Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport default function Header(props) {\r\n  const { activeTopic } = props;\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\">\r\n          {activeTopic}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { CTX } from './Store';\r\nimport Topics from './Topics';\r\nimport Messages from './Messages';\r\nimport SendMessage from './SendMessage.jsx';\r\nimport Header from './Header';\r\n\r\nexport default function Dashboard() {\r\n\r\n  // Context store\r\n  const { chats, sendChatAction } = React.useContext(CTX);\r\n\r\n  // Get topics out\r\n  const topics = Object.keys(chats);\r\n\r\n  // Local state\r\n  const [chatMessage, changeChatMessage] = React.useState('');\r\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n\r\n  const user = 'eric' + Math.ceil(Math.random() * 100);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header activeTopic={activeTopic} />\r\n      <Container>\r\n        <Paper className=\"app-container\">\r\n          <Topics topics={topics} changeActiveTopic={changeActiveTopic} />\r\n          <Messages chats={chats} activeTopic={activeTopic} />\r\n          <SendMessage chatMessage={chatMessage} changeChatMessage={changeChatMessage} user={user} activeTopic={activeTopic} sendChatAction={sendChatAction} />\r\n        </Paper >\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\n\nimport Store from './Store';\n\nfunction App() {\n  return (\n    <Store>\n      <Dashboard></Dashboard>\n    </Store>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}