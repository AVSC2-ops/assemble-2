{"version":3,"sources":["components/Topics.jsx","components/Messages.jsx","actions/index.js","actions/types.js","components/SendMessage.jsx","components/Header.jsx","components/Dashboard.jsx","components/App.js","components/socketMiddleware.js","reducers/chatReducer.jsx","reducers/index.js","index.js"],"names":["Topics","props","topics","changeActiveTopic","react_default","a","createElement","className","List","map","topic","ListItem","onClick","e","key","button","Messages","messageContainer","activeTopic","chatStore","useSelector","state","chat","console","log","useEffect","scrollIntoView","message","i","Chip","avatar","Icon","label","from","msg","ref","element","sendMessage","type","payload","SendMessage","dispatch","useDispatch","chatMessage","changeChatMessage","user","handleKeyPress","Fragment","class","TextField","autoComplete","color","id","concat","value","onChange","target","onKeyPress","Header","_React$useState","React","useState","_React$useState2","Object","slicedToArray","drawerVisible","changeDrawerVisible","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","SwipeableDrawer","anchor","open","onClose","Typography","variant","Math","ceil","random","Dashboard","keys","_React$useState3","_React$useState4","theme","createMuiTheme","palette","primary","main","App","baseUrl","ThemeProvider","initialState","general","react","sports","business","politics","combineReducers","arguments","length","undefined","action","objectSpread","defineProperty","toConsumableArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","storeAPI","socket","io","on","next","emit","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bfc5a8ed.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nexport default function Topics(props) {\r\n  const { topics, changeActiveTopic } = props;\r\n  return (\r\n    <div className=\"topics-container\">\r\n      <List>\r\n        {topics.map(topic => (\r\n          <ListItem onClick={(e) => changeActiveTopic(topic)} key={topic} button># {topic}</ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Chip, Icon } from '@material-ui/core';\r\n\r\nexport default function Messages(props) {\r\n\r\n  const { activeTopic } = props;\r\n\r\n  const chatStore = useSelector(state => state.chat);\r\n  console.log(activeTopic);\r\n\r\n  let messageContainer;\r\n\r\n  useEffect(() => {\r\n    // Keep scroll on bottom\r\n    messageContainer.scrollIntoView();\r\n  })\r\n\r\n  return (\r\n    <div className=\"messages-container\">\r\n      {chatStore[activeTopic].map((message, i) => (\r\n        <div className=\"message\" key={i}>\r\n          <Chip avatar={<Icon>person</Icon>} label={message.from + ' ' + message.msg} />\r\n        </div>\r\n      ))}\r\n      <div ref={(element) => messageContainer = element}></div>\r\n    </div>\r\n  )\r\n}\r\n","import { SEND_MESSAGE, UPDATE_CHAT } from './types';\r\n\r\nexport const sendMessage = (message) => ({\r\n  type: SEND_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateChat = (message) => ({\r\n  type: UPDATE_CHAT,\r\n  payload: message\r\n});","export const UPDATE_CHAT = 'UPDATE_CHAT';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';","import React from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from '../actions';\r\n\r\nexport default function SendMessage(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { chatMessage, changeChatMessage, activeTopic, user } = props;\r\n\r\n  function handleSubmit(message) {\r\n    dispatch(sendMessage(message));\r\n    changeChatMessage('');\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\")\r\n      handleSubmit({ topic: activeTopic, from: user, msg: chatMessage });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"send-message-border\" />\r\n      <div class=\"send-message-container\">\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          color=\"blue\"\r\n          id=\"filled-name\"\r\n          className=\"message-input\"\r\n          label={`Message # ${activeTopic}`}\r\n          value={chatMessage}\r\n          onChange={(e) => changeChatMessage(e.target.value)}\r\n          onKeyPress={(e) => handleKeyPress(e)}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Menu, SwipeableDrawer } from '@material-ui/core';\r\nimport Topics from './Topics';\r\n\r\nexport default function Header(props) {\r\n\r\n  // Local state\r\n  const [drawerVisible, changeDrawerVisible] = React.useState(false);\r\n\r\n  const { topics, activeTopic } = props;\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"navbar\">\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"menu-burger-button\">\r\n          <MenuIcon onClick={() => changeDrawerVisible(true)} />\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={drawerVisible}\r\n          onClose={() => changeDrawerVisible(false)}\r\n        >\r\n          <Topics topics={topics} activeTopic={activeTopic} />\r\n        </SwipeableDrawer>\r\n        <Typography variant=\"h6\">\r\n          {activeTopic}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Topics from './Topics';\r\nimport Messages from './Messages';\r\nimport SendMessage from './SendMessage.jsx';\r\nimport Header from './Header';\r\n\r\nconst user = 'eric' + Math.ceil(Math.random() * 100);\r\n\r\nexport default function Dashboard() {\r\n\r\n  const chatStore = useSelector(state => state.chat);\r\n  const topics = Object.keys(chatStore);\r\n\r\n  // Local state\r\n  const [chatMessage, changeChatMessage] = React.useState('');\r\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Header topics={topics} activeTopic={activeTopic} />\r\n\r\n      <div className=\"grid-container\">\r\n\r\n        <div className=\"topics-grid\">\r\n          <Topics topics={topics} changeActiveTopic={changeActiveTopic} />\r\n        </div>\r\n\r\n        <div className=\"messages-grid\">\r\n          <Messages activeTopic={activeTopic} />\r\n        </div>\r\n\r\n        <div className=\"send-messages-grid\">\r\n          <SendMessage chatMessage={chatMessage} changeChatMessage={changeChatMessage} user={user} activeTopic={activeTopic} />\r\n        </div>\r\n\r\n      </div >\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    }\n  }\n});\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import io from 'socket.io-client';\r\n\r\nimport { SEND_MESSAGE, UPDATE_CHAT } from '../actions/types';\r\n\r\nexport const socketMiddleware = (baseUrl) => {\r\n  return storeAPI => {\r\n    let socket = io(baseUrl);\r\n\r\n    // Dispatch chat to reducers when we receive data\r\n    socket.on(\"simple-chat\", (message) => {\r\n      storeAPI.dispatch({\r\n        type: UPDATE_CHAT,\r\n        payload: message\r\n      });\r\n    });\r\n\r\n    // Emit when SEND_MESSAGE action\r\n    return next => action => {\r\n      if (action.type === SEND_MESSAGE) {\r\n        socket.emit('simple-chat', action.payload);\r\n        return;\r\n      }\r\n\r\n      return next(action);\r\n    }\r\n  }\r\n}","const initialState = {\r\n  general: [\r\n  ],\r\n  react: [\r\n  ],\r\n  sports: [\r\n  ],\r\n  business: [\r\n  ],\r\n  politics: [\r\n  ],\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_CHAT':\r\n      return {\r\n        ...state,\r\n        [action.payload.topic]: [\r\n          ...state[action.payload.topic], { from: action.payload.from, msg: action.payload.msg }\r\n        ]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { chatReducer } from './chatReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  chat: chatReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { socketMiddleware } from './components/socketMiddleware';\n\nimport reducers from './reducers'\n\n\nconst baseUrl = (process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://simple-chat-apix.herokuapp.com/');\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk, socketMiddleware(baseUrl))));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}