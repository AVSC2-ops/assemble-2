{"version":3,"sources":["actions/index.js","actions/types.js","components/Sidebar.jsx","components/Header.jsx","components/Messages.jsx","components/SendMessage.jsx","components/Dashboard.jsx","components/App.js","components/socketMiddleware.js","reducers/chatReducer.jsx","reducers/userReducer.jsx","reducers/index.js","index.js"],"names":["sendMessage","message","type","payload","changeServer","server","changeTopic","Topics","props","_useSelector","useSelector","state","chat","activeServer","user","activeTopic","dispatch","useDispatch","_useState","useState","userName","_useState2","Object","slicedToArray","changeUserName","_useState3","_useState4","snackBarVisible","changeSnackBarVisible","_useState5","_useState6","snackBarMessage","changeSnackBarMessage","topics","servers","changeDrawerVisible","react_default","a","createElement","className","List","map","Tooltip","title","key","placement","IconButton","GroupWork_default","onClick","ListItem","topic","e","button","style","verticalAlign","fontWeight","Typography","variant","toLowerCase","ListItemAvatar","Avatar","Person_default","TextField","id","value","onChange","target","onKeyPress","console","log","userId","concat","setTimeout","handleKeyPress","Snackbar","anchorOrigin","vertical","horizontal","open","Header","drawerVisible","AppBar","position","Toolbar","edge","color","aria-label","Menu_default","SwipeableDrawer","anchor","onClose","Messages","messageContainer","chatStore","useEffect","scrollIntoView","Fragment","i","src","process","height","ListItemText","primary","from","secondary","msg","ref","element","SendMessage","chatMessage","changeChatMessage","emojiMenuVisible","changeEmojiMenuVisible","shiftKey","window","onclick","String","includes","TextareaAutosize","placeholder","handleOnChange","SentimentVerySatisfied_default","dist_es","set","onSelect","native","handleEmojiClick","Dashboard","keys","theme","createMuiTheme","overrides","MuiTooltip","tooltip","fontSize","backgroundColor","MuiSnackbarContent","root","MuiAppBar","colorPrimary","palette","main","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","App","baseUrl","ThemeProvider","initialState","programming haven","general","react","vue","php","node","game land","HOTS","Overwatch","Diablo","PoE","CSGO","isSignedIn","isAdmin","Math","floor","random","combineReducers","arguments","length","undefined","action","_action$payload","objectSpread","defineProperty","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","storeAPI","socket","io","on","next","emit","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ed27281c.chunk.js","sourcesContent":["import { SEND_MESSAGE, UPDATE_CHAT, CHANGE_SERVER, CHANGE_TOPIC, SIGN_IN, SIGN_OUT } from './types';\r\n\r\nexport const sendMessage = (message) => ({\r\n  type: SEND_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateChat = (message) => ({\r\n  type: UPDATE_CHAT,\r\n  payload: message\r\n});\r\n\r\nexport const changeServer = (server) => ({\r\n  type: CHANGE_SERVER,\r\n  payload: server\r\n});\r\n\r\nexport const changeTopic = (server) => ({\r\n  type: CHANGE_TOPIC,\r\n  payload: server\r\n});\r\n\r\nexport const signIn = (user) => ({\r\n  type: SIGN_IN,\r\n  payload: user\r\n})\r\n\r\nexport const signOut = (user) => ({\r\n  type: SIGN_IN,\r\n  payload: user\r\n})","export const UPDATE_CHAT = 'UPDATE_CHAT';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const CHANGE_SERVER = 'CHANGE_SERVER';\r\nexport const CHANGE_TOPIC = 'CHANGE_TOPIC';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport GroupWork from '@material-ui/icons/GroupWork';\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Tooltip, IconButton, Typography, TextField, Snackbar } from '@material-ui/core';\r\n\r\n\r\nimport { changeServer, changeTopic, signIn, signOut } from '../actions';\r\n\r\nexport default function Topics(props) {\r\n\r\n  // Get store state\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n  const user = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  // Local state\r\n  const [userName, changeUserName] = useState(user.userName);\r\n  const [snackBarVisible, changeSnackBarVisible] = useState(false);\r\n  const [snackBarMessage, changeSnackBarMessage] = useState('');\r\n\r\n  // Get props from parent\r\n  const { topics, servers, changeDrawerVisible } = props;\r\n\r\n\r\n  function handleKeyPress(e) {\r\n    console.log('fired');\r\n    if (e.key === \"Enter\") {\r\n      dispatch({ type: 'SIGN_IN', payload: { userId: '1', userName: userName } });\r\n      changeSnackBarMessage(`Name changed to : ${userName}`);\r\n      changeSnackBarVisible(true);\r\n      setTimeout(() => changeSnackBarVisible(false), 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"servers-container\">\r\n        <List>\r\n          {servers.map(server => (\r\n            <Tooltip title={server} key={server} placement=\"right\" className=\"server-tooltip\">\r\n              <IconButton className=\"server-icon\">\r\n                <GroupWork onClick={() => dispatch(changeServer(server))} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <div className=\"topics-container\">\r\n        <List className=\"topic-list\">\r\n          <ListItem className=\"title-container\">{activeServer}</ListItem>\r\n          {topics.map(topic => (\r\n            <ListItem onClick={(e) => { dispatch(changeTopic(topic)); changeDrawerVisible(false); }} key={topic} button>\r\n              <i style={{ verticalAlign: 'text-bottom', fontWeight: 'bold' }} className=\"topic-hashtag\">#</i>\r\n              <Typography variant=\"body1\">{topic.toLowerCase()}</Typography>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <div className=\"user-options\">\r\n          <ListItem className=\"user-info\">\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <TextField\r\n              id=\"user-name\"\r\n              value={userName}\r\n              onChange={(e) => changeUserName(e.target.value)}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n            />\r\n          </ListItem>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n            open={snackBarVisible}\r\n            message={snackBarMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { SwipeableDrawer } from '@material-ui/core';\r\nimport Sidebar from './Sidebar';\r\n\r\nexport default function Header(props) {\r\n\r\n  // Get store state\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n\r\n  // Local state\r\n  const [drawerVisible, changeDrawerVisible] = useState(false);\r\n\r\n  // Get props from parent\r\n  const { topics, servers } = props;\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"navbar\">\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"menu-burger-button\">\r\n          <MenuIcon onClick={() => changeDrawerVisible(true)} />\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={drawerVisible}\r\n          onClose={() => changeDrawerVisible(false)}\r\n        >\r\n          <Sidebar topics={topics} servers={servers} changeDrawerVisible={changeDrawerVisible} />\r\n        </SwipeableDrawer>\r\n        <i style={{ verticalAlign: 'text-bottom', fontWeight: 'bold' }} className=\"topic-hashtag\">#</i>\r\n        <Typography variant=\"h5\">\r\n          {activeTopic.toLowerCase()}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\r\nimport Header from './Header';\r\n\r\nexport default function Messages(props) {\r\n\r\n  // Get store state\r\n  const chatStore = useSelector(state => state.chat);\r\n  const { activeServer, activeTopic } = chatStore;\r\n\r\n  // Get props \r\n  const { topics, servers } = props;\r\n\r\n  // ref\r\n  let messageContainer;\r\n\r\n  useEffect(() => {\r\n    // Keep scroll on bottom\r\n    messageContainer.scrollIntoView()\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header topics={topics} servers={servers}></Header>\r\n      <div className=\"messages-container\">\r\n        <List>\r\n          {chatStore.servers[activeServer][activeTopic].map((message, i) => (\r\n            <ListItem className=\"message\" key={i}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <img src={process.env.PUBLIC_URL + \"/user.png\"} height=\"48\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={message.from} secondary={message.msg} className=\"message-text\" />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <div ref={(element) => messageContainer = element}></div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from '../actions';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart';\r\n\r\nimport SmileyFace from '@material-ui/icons/SentimentVerySatisfied';\r\n\r\nexport default function SendMessage(props) {\r\n\r\n  // Get store state\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n  const { userName } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  // Local state\r\n  const [chatMessage, changeChatMessage] = useState('');\r\n  const [emojiMenuVisible, changeEmojiMenuVisible] = useState(false);\r\n\r\n  function handleSubmit(message) {\r\n    console.log(message);\r\n    dispatch(sendMessage(message));\r\n    changeChatMessage(\"\");\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\" && !e.shiftKey)\r\n      handleSubmit({ server: activeServer, topic: activeTopic, from: userName, msg: chatMessage });\r\n  }\r\n\r\n  function handleOnChange(e) {\r\n    // Catches enters (dont render to screen)\r\n    // Shift enter still works\r\n    if (e.target.value !== \"\\n\")\r\n      changeChatMessage(e.target.value)\r\n  }\r\n\r\n  function handleEmojiClick(e) {\r\n    changeChatMessage(chatMessage + e.native);\r\n    changeEmojiMenuVisible(false);\r\n  }\r\n\r\n  window.onclick = ((e) => {\r\n    if (String(e.target.className).includes(\"send-message-emoji-menu\"))\r\n      changeEmojiMenuVisible(false);\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"send-message-border\" />\r\n      <div className=\"send-message-container\">\r\n        <TextareaAutosize\r\n          aria-label=\"empty textarea\"\r\n          placeholder={`Message  #${activeTopic}`}\r\n          className=\"message-text-area\"\r\n          value={chatMessage}\r\n          onChange={(e) => handleOnChange(e)}\r\n          onKeyPress={(e) => handleKeyPress(e)}\r\n        />\r\n        <SmileyFace className=\"send-message-emoji-button\" onClick={() => changeEmojiMenuVisible(!emojiMenuVisible)} />\r\n      </div>\r\n      <div className={(emojiMenuVisible ? \"send-message-emoji-menu show\" : \"send-message-emoji-menu hide\")}>\r\n        <div className=\"emoji-wrapper\"><Picker set=\"emojione\" onSelect={(e) => handleEmojiClick(e)} /></div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport Messages from './Messages';\r\nimport SendMessage from './SendMessage.jsx';\r\nimport Header from './Header';\r\n\r\nexport default function Dashboard() {\r\n\r\n  // Get store state\r\n  const chatStore = useSelector(state => state.chat);\r\n\r\n  // Get servers and topics out of store\r\n  const servers = Object.keys(chatStore.servers);\r\n  const topics = Object.keys(chatStore.servers[chatStore.activeServer]);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"grid-container\">\r\n\r\n        <div className=\"sidebar-grid\">\r\n          <Sidebar topics={topics} servers={servers} />\r\n        </div>\r\n\r\n        <div className=\"messages-grid\">\r\n          <Messages topics={topics} servers={servers} />\r\n        </div>\r\n\r\n        <div className=\"send-messages-grid\">\r\n          <SendMessage />\r\n        </div>\r\n\r\n      </div >\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: \"16px\",\n        backgroundColor: 'black'\n      }\n    },\n    MuiSnackbarContent: {\n      root: {\n        backgroundColor: '#202225',\n        color: 'white'\n      }\n    },\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#36393E',\n        position: 'absolute'\n      }\n    }\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  }\n\n});\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import io from 'socket.io-client';\r\n\r\nimport { SEND_MESSAGE, UPDATE_CHAT } from '../actions/types';\r\n\r\nexport const socketMiddleware = (baseUrl) => {\r\n  return storeAPI => {\r\n    let socket = io(baseUrl);\r\n\r\n    // Dispatch chat to reducers when we receive data\r\n    socket.on(\"simple-chat\", (message) => {\r\n      storeAPI.dispatch({\r\n        type: UPDATE_CHAT,\r\n        payload: message\r\n      });\r\n    });\r\n\r\n    // Emit when SEND_MESSAGE action\r\n    return next => action => {\r\n      if (action.type === SEND_MESSAGE) {\r\n        socket.emit('simple-chat', action.payload);\r\n        return;\r\n      }\r\n\r\n      return next(action);\r\n    }\r\n  }\r\n}","const initialState = {\r\n  servers: {\r\n    \"programming haven\": {\r\n      general: [\r\n      ],\r\n      react: [\r\n      ],\r\n      vue: [\r\n      ],\r\n      php: [\r\n      ],\r\n      node: [\r\n      ]\r\n    },\r\n    \"game land\": {\r\n      HOTS: [\r\n      ],\r\n      Overwatch: [\r\n      ],\r\n      Diablo: [\r\n      ],\r\n      PoE: [\r\n      ],\r\n      CSGO: [\r\n      ]\r\n    },\r\n  },\r\n  activeServer: '',\r\n  activeTopic: '',\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action) => {\r\n  console.log('hit reducer');\r\n  switch (action.type) {\r\n    case 'UPDATE_CHAT':\r\n      const { server, topic, from, msg } = action.payload;\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        servers: {\r\n          ...state.servers,\r\n          [server]: {\r\n            ...state.servers[server],\r\n            [topic]: [\r\n              ...state.servers[server][topic], { from: from, msg: msg }\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    case 'CHANGE_SERVER':\r\n      return { ...state, activeServer: action.payload, activeTopic: Object.keys(state.servers[action.payload])[0] }\r\n    case 'CHANGE_TOPIC':\r\n      return { ...state, activeTopic: action.payload }\r\n    default:\r\n      return { ...state, activeServer: Object.keys(state.servers)[0], activeTopic: Object.keys(state.servers[Object.keys(state.servers)[0]])[0] };\r\n  }\r\n}\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isSignedIn: false,\r\n  isAdmin: false,\r\n  userId: null,\r\n  userName: 'anonymous' + Math.floor((Math.random(0) * 100))\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload.userId, userName: action.payload.userName }\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null, userName: 'anonymous' + (Math.random(0) * 100) }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { chatReducer } from './chatReducer';\r\nimport { userReducer } from './userReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  chat: chatReducer,\r\n  user: userReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { socketMiddleware } from './components/socketMiddleware';\n\nimport reducers from './reducers'\n\n\nconst baseUrl = (process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://simple-chat-apix.herokuapp.com/');\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk, socketMiddleware(baseUrl))));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}