{"version":3,"sources":["actions/index.js","actions/types.js","components/Sidebar.jsx","components/Messages.jsx","components/SendMessage.jsx","components/Header.jsx","components/Dashboard.jsx","components/App.js","components/socketMiddleware.js","reducers/chatReducer.jsx","reducers/userReducer.jsx","reducers/index.js","index.js"],"names":["sendMessage","message","type","payload","changeServer","server","changeTopic","Topics","props","user","useSelector","state","dispatch","useDispatch","_useState","useState","userName","_useState2","Object","slicedToArray","changeUserName","_useState3","_useState4","snackBarVisible","changeSnackBarVisible","_useState5","_useState6","snackBarMessage","changeSnackBarMessage","topics","servers","react_default","a","createElement","className","List","map","Tooltip","title","key","placement","IconButton","GroupWork_default","onClick","topic","ListItem","e","button","style","verticalAlign","fontWeight","Typography","variant","ListItemAvatar","Avatar","Person_default","TextField","id","value","onChange","target","onKeyPress","console","log","userId","concat","setTimeout","handleKeyPress","Snackbar","anchorOrigin","vertical","horizontal","open","Messages","messageContainer","chatStore","chat","activeServer","activeTopic","useEffect","scrollIntoView","i","ListItemText","primary","from","secondary","msg","ref","element","SendMessage","_useSelector","chatMessage","changeChatMessage","Fragment","autoComplete","color","label","Header","drawerVisible","changeDrawerVisible","AppBar","position","Toolbar","edge","aria-label","Menu_default","SwipeableDrawer","anchor","onClose","Dashboard","keys","theme","createMuiTheme","overrides","MuiTooltip","tooltip","fontSize","backgroundColor","MuiSnackbarContent","root","palette","main","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","App","baseUrl","ThemeProvider","initialState","programming haven","general","react","vue","php","node","game land","HOTS","Overwatch","Diablo","PoE","CSGO","isSignedIn","isAdmin","Math","floor","random","combineReducers","arguments","length","undefined","action","_action$payload","objectSpread","defineProperty","toConsumableArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","storeAPI","socket","io","on","next","emit","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.803295b6.chunk.js","sourcesContent":["import { SEND_MESSAGE, UPDATE_CHAT, CHANGE_SERVER, CHANGE_TOPIC, SIGN_IN, SIGN_OUT } from './types';\r\n\r\nexport const sendMessage = (message) => ({\r\n  type: SEND_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateChat = (message) => ({\r\n  type: UPDATE_CHAT,\r\n  payload: message\r\n});\r\n\r\nexport const changeServer = (server) => ({\r\n  type: CHANGE_SERVER,\r\n  payload: server\r\n});\r\n\r\nexport const changeTopic = (server) => ({\r\n  type: CHANGE_TOPIC,\r\n  payload: server\r\n});\r\n\r\nexport const signIn = (user) => ({\r\n  type: SIGN_IN,\r\n  payload: user\r\n})\r\n\r\nexport const signOut = (user) => ({\r\n  type: SIGN_IN,\r\n  payload: user\r\n})","export const UPDATE_CHAT = 'UPDATE_CHAT';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const CHANGE_SERVER = 'CHANGE_SERVER';\r\nexport const CHANGE_TOPIC = 'CHANGE_TOPIC';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport GroupWork from '@material-ui/icons/GroupWork';\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Tooltip, IconButton, Typography, TextField, Snackbar } from '@material-ui/core';\r\n\r\n\r\nimport { changeServer, changeTopic, signIn, signOut } from '../actions';\r\n\r\nexport default function Topics(props) {\r\n\r\n  // Get store state\r\n  const user = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  // Local state\r\n  const [userName, changeUserName] = useState(user.userName);\r\n  const [snackBarVisible, changeSnackBarVisible] = useState(false);\r\n  const [snackBarMessage, changeSnackBarMessage] = useState('');\r\n\r\n  // Get props from parent\r\n  const { topics, servers } = props;\r\n\r\n\r\n  function handleKeyPress(e) {\r\n    console.log('fired');\r\n    if (e.key === \"Enter\") {\r\n      dispatch({ type: 'SIGN_IN', payload: { userId: '1', userName: userName } });\r\n      changeSnackBarMessage(`Name changed to : ${userName}`);\r\n      changeSnackBarVisible(true);\r\n      setTimeout(() => changeSnackBarVisible(false), 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"servers-container\">\r\n        <List>\r\n          {servers.map(server => (\r\n            <Tooltip title={server} key={server} placement=\"right\" className=\"server-tooltip\">\r\n              <IconButton className=\"server-icon\">\r\n                <GroupWork onClick={() => dispatch(changeServer(server))} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <div className=\"topics-container\">\r\n        <List className=\"topic\">\r\n          {topics.map(topic => (\r\n            <ListItem onClick={(e) => dispatch(changeTopic(topic))} key={topic} button>\r\n              <i style={{ verticalAlign: 'text-bottom', fontWeight: 'bold' }} className=\"topic-hashtag\">#</i>\r\n              <Typography variant=\"body1\">{topic}</Typography>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <div className=\"user-options\">\r\n          <ListItem className=\"user-info\">\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <TextField\r\n              id=\"user-name\"\r\n              value={userName}\r\n              onChange={(e) => changeUserName(e.target.value)}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n            />\r\n          </ListItem>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n            open={snackBarVisible}\r\n            message={snackBarMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport default function Messages(props) {\r\n\r\n  // Get store state\r\n  const chatStore = useSelector(state => state.chat);\r\n  const { activeServer, activeTopic } = chatStore;\r\n\r\n\r\n  // ref\r\n  let messageContainer;\r\n\r\n  useEffect(() => {\r\n    // Keep scroll on bottom\r\n    messageContainer.scrollIntoView()\r\n  })\r\n\r\n  return (\r\n    <div className=\"messages-container\">\r\n      <List>\r\n        {chatStore.servers[activeServer][activeTopic].map((message, i) => (\r\n          <ListItem className=\"message\" key={i}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={message.from} secondary={message.msg} className=\"message-text\" />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <div ref={(element) => messageContainer = element}></div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from '../actions';\r\n\r\nexport default function SendMessage(props) {\r\n\r\n  // Get store state\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n  const { userName } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  // Local state\r\n  const [chatMessage, changeChatMessage] = useState('');\r\n\r\n  function handleSubmit(message) {\r\n    dispatch(sendMessage(message));\r\n    changeChatMessage('');\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\")\r\n      handleSubmit({ server: activeServer, topic: activeTopic, from: userName, msg: chatMessage });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"send-message-border\" />\r\n      <div className=\"send-message-container\">\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          color=\"blue\"\r\n          id=\"filled-name\"\r\n          className=\"message-input\"\r\n          label={`Message # ${activeTopic}`}\r\n          value={chatMessage}\r\n          onChange={(e) => changeChatMessage(e.target.value)}\r\n          onKeyPress={(e) => handleKeyPress(e)}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { SwipeableDrawer } from '@material-ui/core';\r\nimport Sidebar from './Sidebar';\r\n\r\nexport default function Header(props) {\r\n\r\n  // Get store state\r\n  const { activeServer, activeTopic } = useSelector(state => state.chat);\r\n\r\n  // Local state\r\n  const [drawerVisible, changeDrawerVisible] = useState(false);\r\n\r\n  // Get props from parent\r\n  const { topics, servers } = props;\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"navbar\">\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"menu-burger-button\">\r\n          <MenuIcon onClick={() => changeDrawerVisible(true)} />\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={drawerVisible}\r\n          onClose={() => changeDrawerVisible(false)}\r\n        >\r\n          <Sidebar topics={topics} servers={servers} />\r\n        </SwipeableDrawer>\r\n        <Typography variant=\"h6\">\r\n          {activeServer} - {activeTopic}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Sidebar from './Sidebar';\r\nimport Messages from './Messages';\r\nimport SendMessage from './SendMessage.jsx';\r\nimport Header from './Header';\r\n\r\nexport default function Dashboard() {\r\n\r\n  // Get store state\r\n  const chatStore = useSelector(state => state.chat);\r\n\r\n  // Get servers and topics out of store\r\n  const servers = Object.keys(chatStore.servers);\r\n  const topics = Object.keys(chatStore.servers[chatStore.activeServer]);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Header topics={topics} servers={servers} />\r\n\r\n      <div className=\"grid-container\">\r\n\r\n        <div className=\"sidebar-grid\">\r\n          <Sidebar topics={topics} servers={servers} />\r\n        </div>\r\n\r\n        <div className=\"messages-grid\">\r\n          <Messages topics={topics} />\r\n        </div>\r\n\r\n        <div className=\"send-messages-grid\">\r\n          <SendMessage />\r\n        </div>\r\n\r\n      </div >\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: \"16px\",\n        backgroundColor: 'black'\n      }\n    },\n    MuiSnackbarContent: {\n      root: {\n        backgroundColor: '#202225',\n        color: 'white'\n      }\n    }\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  }\n\n});\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import io from 'socket.io-client';\r\n\r\nimport { SEND_MESSAGE, UPDATE_CHAT } from '../actions/types';\r\n\r\nexport const socketMiddleware = (baseUrl) => {\r\n  return storeAPI => {\r\n    let socket = io(baseUrl);\r\n\r\n    // Dispatch chat to reducers when we receive data\r\n    socket.on(\"simple-chat\", (message) => {\r\n      storeAPI.dispatch({\r\n        type: UPDATE_CHAT,\r\n        payload: message\r\n      });\r\n    });\r\n\r\n    // Emit when SEND_MESSAGE action\r\n    return next => action => {\r\n      if (action.type === SEND_MESSAGE) {\r\n        socket.emit('simple-chat', action.payload);\r\n        return;\r\n      }\r\n\r\n      return next(action);\r\n    }\r\n  }\r\n}","const initialState = {\r\n  servers: {\r\n    \"programming haven\": {\r\n      general: [\r\n      ],\r\n      react: [\r\n      ],\r\n      vue: [\r\n      ],\r\n      php: [\r\n      ],\r\n      node: [\r\n      ],\r\n    },\r\n    \"game land\": {\r\n      HOTS: [\r\n      ],\r\n      Overwatch: [\r\n      ],\r\n      Diablo: [\r\n      ],\r\n      PoE: [\r\n      ],\r\n      CSGO: [\r\n      ],\r\n    },\r\n  },\r\n  activeServer: '',\r\n  activeTopic: '',\r\n}\r\n\r\nexport const chatReducer = (state = initialState, action) => {\r\n  console.log('hit reducer');\r\n  switch (action.type) {\r\n    case 'UPDATE_CHAT':\r\n      const { server, topic, from, msg } = action.payload;\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        servers: {\r\n          ...state.servers,\r\n          [server]: {\r\n            ...state.servers[server],\r\n            [topic]: [\r\n              ...state.servers[server][topic], { from: from, msg: msg }\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    case 'CHANGE_SERVER':\r\n      return { ...state, activeServer: action.payload, activeTopic: Object.keys(state.servers[action.payload])[0] }\r\n    case 'CHANGE_TOPIC':\r\n      return { ...state, activeTopic: action.payload }\r\n    default:\r\n      return { ...state, activeServer: Object.keys(state.servers)[0], activeTopic: Object.keys(state.servers[Object.keys(state.servers)[0]])[0] };\r\n  }\r\n}\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isSignedIn: false,\r\n  isAdmin: false,\r\n  userId: null,\r\n  userName: 'anonymous' + Math.floor((Math.random(0) * 100))\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload.userId, userName: action.payload.userName }\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null, userName: 'anonymous' + (Math.random(0) * 100) }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { chatReducer } from './chatReducer';\r\nimport { userReducer } from './userReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  chat: chatReducer,\r\n  user: userReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { socketMiddleware } from './components/socketMiddleware';\n\nimport reducers from './reducers'\n\n\nconst baseUrl = (process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://simple-chat-apix.herokuapp.com/');\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk, socketMiddleware(baseUrl))));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}